
Compare the triplates
#include <iostream>
 
using namespace std;
 
int* compareTriplets(int* A, int* B);
 
int main()
{
    int A[3], B[3];
 
    for (int i = 0; i < 3; i++)
    {
        cin >> A[i];
    }
    for (int i = 0; i < 3; i++)
    {
        cin >> B[i];
    }
 
    int* p = compareTriplets(A, B);
 
    cout << p[0] << " " << p[1] << endl;
 
 
    return 0;
}
 
int* compareTriplets(int* A, int* B)
{
    int* result = new int[2];
    result[0] = 0;
    result[1] = 0;
 
    for (int i = 0; i < 3; i++)
    {
        if(A[i] > B[i])
            result[0]++;
        else if(A[i] < B[i])
            result[1]++;
    }
 
    return result;    
}

Big Sum
#include<iostream>
using namespace std;
int main()
{
    int A[1000];
    int n,i;
    long int sum = 0;

    cin>>n;
    for(i =0;i<n;i++){
        cin>>A[i];
        sum += A[i];
    }
    cout<<sum<<endl;

    return 0;
}

Diagonal Difference
#include<iostream>
using namespace std;
int n,i,j;
int diagonalDifference(int arr[100][100]);
int main()
{
    int A[100][100];
    cin>>n;
    for(i =0;i<n;i++){
        for(j=0;j<n;j++){
            cin>>A[i][j];
        }
    }
   cout<<diagonalDifference(A);
    return 0;
}

int diagonalDifference(int arr[100][100]){
    int sum1 = 0; int sum2 =0;
    for(i =0;i<n;i++){
        for(j=0;j<n;j++){
            if(i == j){
                sum1 += arr[i][j];
            }
            if(j == n-1-i){
                  sum2 += arr[i][j];
            }
        }
    }
    int x = sum1 - sum2;
    if(0 > x){
        return -1*x;
    }
    return x;
}

plus minus
#include<bits/stdc++.h>

using namespace std;
int main()
{
    //-4 3 -9 0 4 1
    double A[100];
    double pos,neg,zero;
    int n;
    pos = neg = zero = 0;
    cin>>n;
    for(int i =0;i<n;i++){
            cin>>A[i];
      //  scanf("%lf",&A[i]);
        if(A[i] == 0){
            zero ++;
        }else if (A[i] > 0){
            pos ++;
        }else{
            neg ++;
        }
    }
   
    std::cout<<std::fixed;
    std::cout<<std::setprecision(5);
    cout<<pos/n<<endl;
    cout<<neg/n<<endl;
    cout<<zero/n<<endl;
    return 0;
}

//max min sum

#include <iostream>

using namespace std;

int main()
{
    int val;
    int min = INT32_MAX, max = 0;
    long long int sum = 0;

    for (int i = 0; i < 5; i++)
    {
        cin >> val;
        sum += val;

        if(min > val)
            min = val;
        if(max < val)
            max = val;
    }

    cout << (sum - max) << " " << (sum - min) << endl;


    return 0;
}
Birthday Cake Candles
#include<bits/stdc++.h>
using namespace std;

int main()
{
    int n;
    cin>>n;
    int candels[n];
    int max = 0,count =0;
    for (int i=0;i<n;i++){
        cin>>candels[i];
        if(candels[i]>max){
            max = candels[i];
        }
    }
    for(int  i=0;i<n;i++){
        if(max == candels[i]){
            count ++;
        }
    }
    cout<<count<<endl;
    return 0;
}

time conversation

#include <iostream>

using namespace std;

int main()
{
    string time;

    cin >> time;

    int hh = stoi(time.substr(0,2));

    if(time[8] == 'A')
    {
        if(hh == 12)
            time.replace(0, 2, "00");
    }
    else
    {
        if(hh < 12)
        {
            hh += 12;
            time.replace(0, 2, to_string(hh));
        }
    }

    cout << time.substr(0, 8) << endl;

    return 0;
}

Grading Students
#include<bits/stdc++.h>
using namespace std;

int main()
{
    int n,x;
    cin>>n;
    for(int i =0;i<n;i++)
    {
        cin>>x;
        if(x>=38 and x%5>=3){
            while(x%5!=0){
               x++;
            }
        }
        cout<<x<<endl;
    }
    return 0;
}

apple and orange
#include<bits/stdc++.h>
using namespace std;

int main()
{
    int a,s,t,b,ap=0,o=0,m,n,x;
    cin>>s>>t;
    cin>>a>>b;
    cin>>m>>n;
    while(m--){
        cin>>x;
        int sum = x +a;
        if(s<=sum &&  sum <=t){
            ap++;
        }
        sum = 0;
    }
      while(n--){
        cin>>x;
        int sm = x + b;
        if(sm <= t && sm >=s){
            o++;
        }
        sm = 0;
    }
    cout<<ap<<endl;
    cout<<o<<endl;
    return 0;
}


